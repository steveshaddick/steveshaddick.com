var MailList = function() {
    var a;
    var b;
    var c = false;
    var d = false;
    var e = null;
    function f() {
        a = $("#mailList");
        a.on("mouseenter", j).on("mouseleave", k);
        b = $("#txtEmail");
    }
    function g(a) {
        if (e) {
            clearTimeout(e);
            e = setTimeout(l, 5e3);
        }
        switch (a.which) {
          case 32:
          case 39:
          case 34:
          case 96:
            a.preventDefault();
            return false;
            break;

          case 13:
            h();
            return false;
            break;
        }
        if (c) {
            c = false;
            $("#emailError").addClass("displayNone");
        }
    }
    function h() {
        var a = b.val();
        if (a == "" || !n(a)) {
            m();
            return;
        }
        l();
        b.val("");
        $.ajax("/ajax/submitEmail", {
            cache: false,
            data: {
                txtEmail: a,
                a: GLOBAL.a
            },
            success: i,
            type: "post",
            error: function() {
                i({
                    success: "false"
                });
            }
        });
    }
    function i(a) {
        if (a && a.success === true) {
            Main.showAlert("/views/emailSuccess.html");
        } else {
            Main.showAlert("/views/emailError.html");
        }
    }
    function j() {
        if (e) {
            clearTimeout(e);
        }
        if (d) return;
        d = true;
        a.addClass("open");
        b.bind("keydown", g);
    }
    function k() {
        e = setTimeout(l, 2e3);
    }
    function l() {
        d = false;
        a.removeClass("open");
        b.unbind("keydown", g).blur();
    }
    function m() {
        c = true;
        $("#emailError").removeClass("displayNone");
    }
    function n(a) {
        var b = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return b.test(a);
    }
    return {
        init: f,
        submitEmail: h
    };
}();

function csrfSafeMethod(a) {
    return /^(GET|HEAD|OPTIONS|TRACE)$/.test(a);
}

var Work = function() {
    var a = false;
    var b = false;
    var c = false;
    var d = false;
    var e = false;
    function f() {
        a = $("#workWrapper");
        b = $("#noWork");
        d = $("#videoPlayerContainer");
        Video.init({
            videoPath: "http://video.steveshaddick.com"
        });
        c = b.parent();
    }
    function g() {}
    function h() {
        $(".me-blurry", b).removeClass("out");
    }
    function i(b) {
        $.post("/work/" + b + "/", {}, function(b) {
            if (b && b.success) {
                if (e) {
                    switch (e.type) {
                      case "video":
                        Video.clearVideo();
                        var f = $("#cls .video-swap").clone();
                        f.css({
                            height: d.height(),
                            width: d.width()
                        });
                        $("cls").append(d);
                        $(".video-container", c).append(f);
                        break;
                    }
                }
                var h = c;
                h.addClass("drop");
                TransitionController.transitionEnd(h, function() {
                    h.remove();
                });
                e = b;
                c = $("#cls .work-content").clone();
                $("h1", c).html(b.title);
                if (b.specs != "") {
                    $(".work-specs", c).html(b.specs);
                }
                if (b.info != "") {
                    $(".work-info", c).html(b.info);
                } else {
                    $(".work-info", c).remove();
                }
                var i = false;
                switch (b.type) {
                  case "video":
                    $(".video-container", c).append(d);
                    i = function() {};
                    break;

                  case "website":
                    break;
                }
                a.append(c);
                setTimeout(function() {
                    c.removeClass("hold-high");
                    if (i) {
                        TransitionController.transitionEnd(c, i);
                    }
                }, 10);
            } else {
                g();
            }
        });
    }
    return {
        init: f,
        getWork: i,
        showNoWork: h
    };
}();

var Main = function() {
    function a(a) {
        $.ajaxSetup({
            crossDomain: false,
            beforeSend: function(a, b) {
                if (!csrfSafeMethod(b.type)) {
                    a.setRequestHeader("X-CSRFToken", Cookie.get("csrftoken"));
                }
            }
        });
        if (!Modernizr.csstransitions) {
            TransitionController.setAutoWait(350);
        }
        Work.init();
        SWFAddress.onChange = b;
        if (a.needUrlCheck) {
            $.get("/check-urls/");
        }
    }
    function b() {
        var a = SWFAddress.getPathNames();
        if (a.length > 0) {
            switch (a[0]) {
              case "who":
                $("body").addClass("page-who");
                break;

              default:
                $("body").removeClass("page-who");
                Work.getWork(a[0]);
                break;
            }
        } else {
            $("body").removeClass("page-who");
            Work.showNoWork();
        }
    }
    return {
        init: a
    };
}();

var TransitionController = function() {
    var a = {
        WebkitTransition: "webkitTransitionEnd",
        MozTransition: "transitionend",
        transition: "transitionend"
    }, b = a[Modernizr.prefixed("transition")], c = -1;
    function d(a, d, e) {
        if (typeof e === "undefined") {
            e = c;
        }
        if (e < 0) {
            a.unbind(b);
            a.bind(b, function() {
                a.unbind(b);
                d(a);
            });
        } else {
            setTimeout(function() {
                d(a);
            }, e);
        }
    }
    function e(a) {
        c = a;
    }
    return {
        transitionEnd: d,
        setAutoWait: e
    };
}();

var Video = function() {
    var a;
    var b;
    var c;
    var d;
    var e = false;
    var f;
    var g;
    var h = "/";
    function i(a) {
        if (typeof a.nativeControls === "undefined") a.nativeControls = false;
        if (typeof a.trueFullscreen === "undefined") a.trueFullscreen = true;
        if (typeof a.fullscreenHandler === "undefined") a.fullscreenHandler = function() {};
        if (typeof a.normalscreenHandler === "undefined") a.normalscreenHandler = function() {};
        if (typeof a.videoPath === "undefined") a.videoPath = "";
        d = new SimpleVideo("simpleVideo", {
            nativeControls: a.nativeControls,
            allowFullscreen: !$("html").is(".ie7, .ie8"),
            trueFullscreen: a.trueFullscreen,
            onFullscreen: a.fullscreenHandler,
            onNormalscreen: a.normalscreenHandler
        });
        h = a.videoPath + "/";
    }
    function j(a) {
        if (!e) {
            d.init(function() {
                e = true;
            });
            clearTimeout(f);
            setTimeout(function() {
                j(a);
            }, 100);
            return;
        }
        d.setFile([ {
            src: h + a.videoFile,
            type: "video/mp4"
        } ], a.type === "audio");
        if (typeof a.allowScrub === "undefined") a.allowScrub = true;
        d.setScrub(a.allowScrub);
        if (typeof a.hasAudio === "undefined") a.hasAudio = true;
        d.setHasAudio(a.hasAudio);
        console.log(a.loop);
        d.setRepeat(a.loop);
        d.play();
    }
    function k() {
        if (!e) return;
        d.pause();
    }
    function l() {
        if (!e) return;
        d.play();
    }
    function m() {
        if (!e) return;
        d.seek(0);
    }
    function n() {
        if (!e) return;
        d.clear();
    }
    return {
        init: i,
        playVideo: j,
        clearVideo: n,
        pauseVideo: k,
        resumeVideo: l
    };
}();